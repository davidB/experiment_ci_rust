trigger:
  # batch: true
  branches:
    include:
    - "*"
  tags:
    include:
    - "*"

strategy:
  matrix:
    linux:
      imageName: 'ubuntu-latest'
      TARGET: x86_64-unknown-linux-gnu
      PROFILE: linux
    macos:
      imageName: 'macOS-latest'
      TARGET: x86_64-apple-darwin
      PROFILE: mac
    windows:
      imageName: 'windows-latest'
      TARGET: x86_64-pc-windows-msvc
      PROFILE: windows

pool:
  vmImage: $(imageName)

variables:
  RUSTUP_TOOLCHAIN: stable
  CARGO_MAKE_CI: TRUE
  # CARGO_MAKE_RUN_CODECOV: true
  CARGO_HOME: $(Pipeline.Workspace)/.cargo
  CARGO_MAKE_VERSION: "0.22.1"

steps:
- task: CacheBeta@0
  inputs:
    key: cargo | $(Agent.OS)
    path: $(CARGO_HOME)
  displayName: Cache cargo home

# rust & rustup are pre-installed on Microsoft Hosted VM (see https://github.com/microsoft/azure-pipelines-image-generation/tree/master/images)
# So more need to download and install rustup,... (for the 2 platforms: Linux & Windows)
- script: |
    rustup update $(RUSTUP_TOOLCHAIN)
  condition: ne( variables['Agent.OS'], 'Darwin' )
  displayName: Update rust toolchain

# Linux & Mac
- bash: |
    curl https://sh.rustup.rs -sSf | sh -s -- -y --default-toolchain $RUSTUP_TOOLCHAIN
    echo "##vso[task.setvariable variable=PATH;]$PATH:$CARGO_HOME/bin"
  condition: eq( variables['Agent.OS'], 'Darwin' )
  displayName: Install rustup Mac

# powershell is available on the 3 platforms
- powershell: |
    $CargoMakeVersion = & cargo make --version
    if ($CargoMakeVersion -ne "cargo-make $(CARGO_MAKE_VERSION)") {
      cargo install --version $(CARGO_MAKE_VERSION) --force cargo-make
    }
  displayName: Install cargo-make

- script: |
      rustup -V
      rustc -V
      cargo -V
      cargo make --version
  displayName: Query versions

- script: |
    cargo make --disable-check-for-updates --profile $(PROFILE) ci-flow
  displayName: Make ci-flow

- script: |
    cargo make --disable-check-for-updates --profile $(PROFILE) zip-release-ci-flow
  displayName: Make zip-release-ci-flow

- script: |
    cargo make --disable-check-for-updates --profile $(PROFILE) github-upload-flow
  displayName: Upload to gitHub release
  condition: and(succeeded(), startsWith(variables['Build.SourceBranch'], 'refs/tags/'))
  env:
    GITHUB_TOKEN: $(GITHUB_TOKEN)
