name: Rust

on: [push]

jobs:
  build:
    runs-on: ${{ matrix.os.imageName }}
    env:
      RUSTUP_TOOLCHAIN: stable
    strategy:
      matrix:
        os:
          - imageName: ubuntu-18.04
            TARGET: x86_64-unknown-linux-gnu
            PROFILE: linux
          # - imageName: 'macOS-10.14'
          #   TARGET: x86_64-apple-darwin
          #   PROFILE: mac
          - imageName: 'windows-2019'
            TARGET: x86_64-pc-windows-msvc
            PROFILE: windows

    steps:
    - uses: actions/checkout@v1
    - name: Setup rust, cargo
      shell: bash
      run: |
        rustup update $RUSTUP_TOOLCHAIN || curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y --default-toolchain $RUSTUP_TOOLCHAIN
    - name: Setup cargo env
      if: matrix.os.PROFILE == 'mac'
      shell: bash
      run: |
        source $HOME/.cargo/env
    - name: Setup cargo-make
      shell: bash
      run: |
        cargo install cargo-make
    - name: Run tests
      run: cargo make --disable-check-for-updates --profile ${{ matrix.os.PROFILE }} ci-flow
    - name: Make zip-release-ci-flow
      run: cargo make --disable-check-for-updates --profile ${{ matrix.os.PROFILE }} zip-release-ci-flow
    # - name: Upload to gitHub release
    #   run: cargo make --disable-check-for-updates --profile ${{ matrix.os.PROFILE }} github-upload-flow
      # if: and(succeeded(), startsWith(variables['Build.SourceBranch'], 'refs/tags/'))
      # env:
      #   GITHUB_TOKEN: $(GITHUB_TOKEN)
